Kernel command line: -q -mlfqs run mlfqs-fair-20
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  49,100,800 loops/s.
Boot complete.
Executing 'mlfqs-fair-20':
(mlfqs-fair-20) begin
(mlfqs-fair-20) Starting 20 threads...
(mlfqs-fair-20) Starting threads took 2 ticks.
(mlfqs-fair-20) Sleeping 40 seconds to let threads run, please wait...
Interrupt 0x0d (#GP General Protection Exception) at rip=8004208216
 cr2=0000000000000000 error=               0
rax cccccccccccccc3c rbx 00000000000fc000 rcx 0000000000000028 rdx 00000000fffe99da
rsp 0000008004234e60 rbp 0000008004234e80 rsi 0000000000000004 rdi 000000000000003f
rip 0000008004208216 r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000006
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../threads/interrupt.c:361 in intr_handler(): Unexpected interrupt
Call stack: 0x80042141ba 0x800420922e 0x80042095e0 0x800420df6b 0x80042091c2 0x80042095e0 0x8004207511.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 3540 ticks
Thread: 500 idle ticks, 3039 kernel ticks, 0 user ticks
Console: 1